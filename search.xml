<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新建有图的博客</title>
      <link href="/2019/12/22/%E6%96%B0%E5%BB%BA%E6%9C%89%E5%9B%BE%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/12/22/%E6%96%B0%E5%BB%BA%E6%9C%89%E5%9B%BE%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><p>hexo n ‘blog_name’</p><h2 id="编写博文"><a href="#编写博文" class="headerlink" title="编写博文"></a>编写博文</h2><p>打开名为 blog_name的.md文件 (推荐 使用有道云笔记编写markdown格式博文,写完后, ctrl+a,ctrl+c,ctrl+v搞定)  </p><h2 id="多标签格式"><a href="#多标签格式" class="headerlink" title="多标签格式"></a>多标签格式</h2><p>tags:[tag1, tag2, …,tagn]</p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>1.确认根目录下_config.yml 中的 post_asset_folder:(此处有空格)true<br>2.在hexo的根目录下执行 npm install <a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">https://github.com/CodeFalling/hexo-asset-image</a> –save<br>(我Fork的链接: <a href="https://github.com/xilixixili/hexo-asset-image.git" target="_blank" rel="noopener">https://github.com/xilixixili/hexo-asset-image.git</a>)<br>3.hexo n ‘blog_name’<br>执行过1、2两步后，此时会在_posts目录里出现一个与博文名字相同的文件夹，把你需要插入的图片放入就可以了。<br>4.hexo–markdown 图片引用格式如下:<br><strong>![插图注释](blog_name/image001.png)</strong></p><h2 id="生成博客"><a href="#生成博客" class="headerlink" title="生成博客"></a>生成博客</h2><p><strong>hexo g –&gt;hexo s</strong><br><strong>推送 hexo d</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED</title>
      <link href="/2019/12/22/Pytorch-cuDNN-error-CUDNN-STATUS-EXECUTION-FAILED/"/>
      <url>/2019/12/22/Pytorch-cuDNN-error-CUDNN-STATUS-EXECUTION-FAILED/</url>
      
        <content type="html"><![CDATA[<h2 id="RuntimeError-cuDNN-error-CUDNN-STATUS-EXECUTION-FAILED"><a href="#RuntimeError-cuDNN-error-CUDNN-STATUS-EXECUTION-FAILED" class="headerlink" title="RuntimeError: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED"></a>RuntimeError: cuDNN error: CUDNN_STATUS_EXECUTION_FAILED</h2><p><em>服务器配置一览: RTX 2080ti,cuda9</em></p><h3 id="所遇问题"><a href="#所遇问题" class="headerlink" title="所遇问题"></a>所遇问题</h3><p>在使用pytorch中预训练好的inception_v3网络跑自己实验的时候出现  </p><p><img src="/2019/12/22/Pytorch-cuDNN-error-CUDNN-STATUS-EXECUTION-FAILED/001.png" alt="问题截图"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><p>网上常见的方法汇总:</p><ol><li><strong>重装cuda版本</strong> (RTX20180ti 与cuda9的适用性不如cuda10)</li><li><strong>torch.backends.cudnn.enabled = False</strong> (默认为ture，在调用包的后面加入即可)</li></ol><h3 id="我使用的方法"><a href="#我使用的方法" class="headerlink" title="我使用的方法"></a>我使用的方法</h3><p>比较懒，所以方法2</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><strong>(摘录)</strong> 关于torch.backends.cudnn.enabled 的使用：</p><p>设置这个 flag 可以让内置的 cuDNN 的 auto-tuner 自动寻找最适合当前配置的高效算法，来达到优化运行效率的问题。</p><p>应该遵循以下准则：</p><p>如果网络的输入数据维度或类型上变化不大，置为true 可以增加运行效率；<br>如果网络的输入数据在每次 iteration 都变化的话，会导致 cnDNN 每次都会去寻找一遍最优配置，这样反而会降低运行效率。</p>]]></content>
      
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> RuntimeError </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/07/hello-world/"/>
      <url>/2019/10/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
